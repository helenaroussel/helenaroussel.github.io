/*!
 * skrollr core
 *
 * Alexander Prinzhorn - https://github.com/Prinzhorn/skrollr
 *
 * Free to use under terms of MIT license
 */
(function (aS, W, z) { var a = { get: function () { return O }, init: function (aY) { return O || new aI(aY) }, VERSION: "0.6.30" }; var aG = Object.prototype.hasOwnProperty; var am = aS.Math; var az = aS.getComputedStyle; var y; var t; var w = "touchstart"; var aN = "touchmove"; var ab = "touchcancel"; var e = "touchend"; var aj = "skrollable"; var Z = aj + "-before"; var aV = aj + "-between"; var Q = aj + "-after"; var i = "skrollr"; var ax = "no-" + i; var af = i + "-desktop"; var n = i + "-mobile"; var g = "linear"; var X = 1000; var aq = 0.004; var aU = "skrollr-body"; var aC = 200; var G = "start"; var ad = "end"; var at = "center"; var o = "bottom"; var j = "___skrollable_id"; var ag = /^(?:input|textarea|button|select)$/i; var p = /^\s+|\s+$/g; var H = /^data(?:-(_\w+))?(?:-?(-?\d*\.?\d+p?))?(?:-?(start|end|top|center|bottom))?(?:-?(top|center|bottom))?$/; var u = /\s*(@?[\w\-\[\]]+)\s*:\s*(.+?)\s*(?:;|$)/gi; var d = /^(@?[a-z\-]+)\[(\w+)\]$/; var an = /-([a-z0-9_])/g; var au = function (aZ, aY) { return aY.toUpperCase() }; var av = /[\-+]?[\d]*\.?[\d]+/g; var N = /\{\?\}/g; var m = /rgba?\(\s*-?\d+\s*,\s*-?\d+\s*,\s*-?\d+/g; var aB = /[a-z\-]+-gradient/g; var D = ""; var ai = ""; var aQ = function () { var a0 = /^(?:O|Moz|webkit|ms)|(?:-(?:o|moz|webkit|ms)-)/; if (!az) { return } var aZ = az(t, null); for (var aY in aZ) { D = (aY.match(a0) || (+aY == aY && aZ[aY].match(a0))); if (D) { break } } if (!D) { D = ai = ""; return } D = D[0]; if (D.slice(0, 1) === "-") { ai = D; D = ({ "-webkit-": "webkit", "-moz-": "Moz", "-ms-": "ms", "-o-": "O" })[D] } else { ai = "-" + D.toLowerCase() + "-" } }; var k = function () { var aY = aS.requestAnimationFrame || aS[D.toLowerCase() + "RequestAnimationFrame"]; var aZ = M(); if (J || !aY) { aY = function (a2) { var a0 = M() - aZ; var a1 = am.max(0, 1000 / 60 - a0); return aS.setTimeout(function () { aZ = M(); a2() }, a1) } } return aY }; var ak = function () { var aY = aS.cancelAnimationFrame || aS[D.toLowerCase() + "CancelAnimationFrame"]; if (J || !aY) { aY = function (aZ) { return aS.clearTimeout(aZ) } } return aY }; var K = { begin: function () { return 0 }, end: function () { return 1 }, linear: function (aY) { return aY }, quadratic: function (aY) { return aY * aY }, cubic: function (aY) { return aY * aY * aY }, swing: function (aY) { return (-am.cos(aY * am.PI) / 2) + 0.5 }, sqrt: function (aY) { return am.sqrt(aY) }, outCubic: function (aY) { return (am.pow((aY - 1), 3) + 1) }, bounce: function (aZ) { var aY; if (aZ <= 0.5083) { aY = 3 } else { if (aZ <= 0.8489) { aY = 9 } else { if (aZ <= 0.96208) { aY = 27 } else { if (aZ <= 0.99981) { aY = 91 } else { return 1 } } } } return 1 - am.abs(3 * am.cos(aZ * aY * 1.028) / aY) } }; function aI(aZ) { y = W.documentElement; t = W.body; aQ(); O = this; aZ = aZ || {}; Y = aZ.constants || {}; if (aZ.easing) { for (var a1 in aZ.easing) { K[a1] = aZ.easing[a1] } } aL = aZ.edgeStrategy || "set"; f = { beforerender: aZ.beforerender, render: aZ.render, keyframe: aZ.keyframe }; aa = aZ.forceHeight !== false; if (aa) { ap = aZ.scale || 1 } ar = aZ.mobileDeceleration || aq; B = aZ.smoothScrolling !== false; r = aZ.smoothScrollingDuration || aC; aD = { targetTop: O.getScrollTop() }; J = ((aZ.mobileCheck || function () { return (/Android|iPhone|iPad|iPod|BlackBerry/i).test(navigator.userAgent || navigator.vendor || aS.opera) })()); if (J) { S = W.getElementById(aZ.skrollrBody || aU); if (S) { aW() } s(); v(y, [i, n], [ax]) } else { v(y, [i, af], [ax]) } O.refresh(); aX(aS, "resize orientationchange", function () { var a3 = y.clientWidth; var a2 = y.clientHeight; if (a2 !== A || a3 !== l) { A = a2; l = a3; aw = true } }); var a0 = k(); (function aY() { ah(); aP = a0(aY) }()); return O } aI.prototype.refresh = function (a7) { var a6; var bk; var a5 = false; if (a7 === z) { a5 = true; T = []; al = 0; a7 = W.getElementsByTagName("*") } else { if (a7.length === z) { a7 = [a7] } } a6 = 0; bk = a7.length; for (; a6 < bk; a6++) { var aZ = a7[a6]; var a3 = aZ; var aY = []; var bh = B; var bd = aL; var bb = false; if (a5 && j in aZ) { delete aZ[j] } if (!aZ.attributes) { continue } var bg = 0; var a8 = aZ.attributes.length; for (; bg < a8; bg++) { var ba = aZ.attributes[bg]; if (ba.name === "data-anchor-target") { a3 = W.querySelector(ba.value); if (a3 === null) { throw 'Unable to find anchor target "' + ba.value + '"' } continue } if (ba.name === "data-smooth-scrolling") { bh = ba.value !== "off"; continue } if (ba.name === "data-edge-strategy") { bd = ba.value; continue } if (ba.name === "data-emit-events") { bb = true; continue } var a4 = ba.name.match(H); if (a4 === null) { continue } var a1 = { props: ba.value, element: aZ, eventType: ba.name.replace(an, au) }; aY.push(a1); var a0 = a4[1]; if (a0) { a1.constant = a0.substr(1) } var a2 = a4[2]; if (/p$/.test(a2)) { a1.isPercentage = true; a1.offset = (a2.slice(0, -1) | 0) / 100 } else { a1.offset = (a2 | 0) } var bj = a4[3]; var bi = a4[4] || bj; if (!bj || bj === G || bj === ad) { a1.mode = "absolute"; if (bj === ad) { a1.isEnd = true } else { if (!a1.isPercentage) { a1.offset = a1.offset * ap } } } else { a1.mode = "relative"; a1.anchors = [bj, bi] } } if (!aY.length) { continue } var bf, bc; var a9; if (!a5 && j in aZ) { a9 = aZ[j]; bf = T[a9].styleAttr; bc = T[a9].classAttr } else { a9 = (aZ[j] = al++); bf = aZ.style.cssText; bc = ao(aZ) } T[a9] = { element: aZ, styleAttr: bf, classAttr: bc, anchorTarget: a3, keyFrames: aY, smoothScrolling: bh, edgeStrategy: bd, emitEvents: bb, lastFrameIndex: -1 }; v(aZ, [aj], []) } U(); a6 = 0; bk = a7.length; for (; a6 < bk; a6++) { var be = T[a7[a6][j]]; if (be === z) { continue } x(be); F(be) } return O }; aI.prototype.relativeToAbsolute = function (aZ, a0, a2) { var aY = y.clientHeight; var a1 = aZ.getBoundingClientRect(); var a4 = a1.top; var a3 = a1.bottom - a1.top; if (a0 === o) { a4 -= aY } else { if (a0 === at) { a4 -= aY / 2 } } if (a2 === o) { a4 += a3 } else { if (a2 === at) { a4 += a3 / 2 } } a4 += O.getScrollTop(); return (a4 + 0.5) | 0 }; aI.prototype.animateTo = function (a2, aZ) { aZ = aZ || {}; var aY = M(); var a1 = O.getScrollTop(); var a0 = aZ.duration === z ? X : aZ.duration; aE = { startTop: a1, topDiff: a2 - a1, targetTop: a2, duration: a0, startTime: aY, endTime: aY + a0, easing: K[aZ.easing || g], done: aZ.done }; if (!aE.topDiff) { if (aE.done) { aE.done.call(O, false) } aE = z } return O }; aI.prototype.stopAnimateTo = function () { if (aE && aE.done) { aE.done.call(O, true) } aE = z }; aI.prototype.isAnimatingTo = function () { return !!aE }; aI.prototype.isMobile = function () { return J }; aI.prototype.setScrollTop = function (aZ, aY) { aK = (aY === true); if (J) { aJ = am.min(am.max(aZ, 0), ay) } else { aS.scrollTo(0, aZ) } return O }; aI.prototype.getScrollTop = function () { if (J) { return aJ } else { return aS.pageYOffset || y.scrollTop || t.scrollTop || 0 } }; aI.prototype.getMaxScrollTop = function () { return ay }; aI.prototype.on = function (aY, aZ) { f[aY] = aZ; return O }; aI.prototype.off = function (aY) { delete f[aY]; return O }; aI.prototype.destroy = function () { var aZ = ak(); aZ(aP); c(); v(y, [ax], [i, af, n]); var aY = 0; var a0 = T.length; for (; aY < a0; aY++) { I(T[aY].element) } y.style.overflow = t.style.overflow = ""; y.style.height = t.style.height = ""; if (S) { a.setStyle(S, "transform", "none") } O = z; S = z; f = z; aa = z; ay = 0; ap = 1; Y = z; ar = z; h = "down"; C = -1; l = 0; A = 0; aw = false; aE = z; B = z; r = z; aD = z; aK = z; al = 0; aL = z; J = false; aJ = 0; ae = z }; var s = function () { var a9; var a6; var a8; var a4; var a2; var a3; var a5; var a0; var a1; var aZ; var aY; var a7; aX(y, [w, aN, ab, e].join(" "), function (bf) { var bd = bf.changedTouches[0]; a4 = bf.target; while (a4.nodeType === 3) { a4 = a4.parentNode } a2 = bd.clientY; a3 = bd.clientX; aZ = bf.timeStamp; if (!ag.test(a4.tagName)) { bf.preventDefault() } switch (bf.type) { case w: if (a9) { a9.blur() } O.stopAnimateTo(); a9 = a4; a6 = a5 = a2; a8 = a3; a1 = aZ; break; case aN: if (ag.test(a4.tagName) && W.activeElement !== a4) { bf.preventDefault() } a0 = a2 - a5; a7 = aZ - aY; O.setScrollTop(aJ - a0, true); a5 = a2; aY = aZ; break; default: case ab: case e: var bg = a6 - a2; var bi = a8 - a3; var be = bi * bi + bg * bg; if (be < 49) { if (!ag.test(a9.tagName)) { a9.focus(); var bj = W.createEvent("MouseEvents"); bj.initMouseEvent("click", true, true, bf.view, 1, bd.screenX, bd.screenY, bd.clientX, bd.clientY, bf.ctrlKey, bf.altKey, bf.shiftKey, bf.metaKey, 0, null); a9.dispatchEvent(bj) } return } a9 = z; var bb = a0 / a7; bb = am.max(am.min(bb, 3), -3); var bc = am.abs(bb / ar); var bk = bb * bc + 0.5 * ar * bc * bc; var bh = O.getScrollTop() - bk; var ba = 0; if (bh > ay) { ba = (ay - bh) / bk; bh = ay } else { if (bh < 0) { ba = -bh / bk; bh = 0 } } bc = bc * (1 - ba); O.animateTo((bh + 0.5) | 0, { easing: "outCubic", duration: bc }); break } }); aS.scrollTo(0, 0); y.style.overflow = t.style.overflow = "hidden" }; var L = function () { var a8 = y.clientHeight; var ba = aA(); var a0; var a6; var a5; var a7; var aY; var a1; var a2; var a4; var a9; var a3; var aZ; a4 = 0; a9 = T.length; for (; a4 < a9; a4++) { a0 = T[a4]; a6 = a0.element; a5 = a0.anchorTarget; a7 = a0.keyFrames; aY = 0; a1 = a7.length; for (; aY < a1; aY++) { a2 = a7[aY]; a3 = a2.offset; aZ = ba[a2.constant] || 0; a2.frame = a3; if (a2.isPercentage) { a3 = a3 * a8; a2.frame = a3 } if (a2.mode === "relative") { I(a6); a2.frame = O.relativeToAbsolute(a5, a2.anchors[0], a2.anchors[1]) - a3; I(a6, true) } a2.frame += aZ; if (aa) { if (!a2.isEnd && a2.frame > ay) { ay = a2.frame } } } } ay = am.max(ay, R()); a4 = 0; a9 = T.length; for (; a4 < a9; a4++) { a0 = T[a4]; a7 = a0.keyFrames; aY = 0; a1 = a7.length; for (; aY < a1; aY++) { a2 = a7[aY]; aZ = ba[a2.constant] || 0; if (a2.isEnd) { a2.frame = ay - a2.offset + aZ } } a0.keyFrames.sort(aH) } }; var ac = function (be, bf) { var a0 = 0; var a3 = T.length; for (; a0 < a3; a0++) { var bi = T[a0]; var aZ = bi.element; var ba = bi.smoothScrolling ? be : bf; var a9 = bi.keyFrames; var bb = a9.length; var a7 = a9[0]; var aY = a9[a9.length - 1]; var bg = ba < a7.frame; var a8 = ba > aY.frame; var bj = bg ? a7 : aY; var bd = bi.emitEvents; var a1 = bi.lastFrameIndex; var bk; var bc; if (bg || a8) { if (bg && bi.edge === -1 || a8 && bi.edge === 1) { continue } if (bg) { v(aZ, [Z], [Q, aV]); if (bd && a1 > -1) { E(aZ, a7.eventType, h); bi.lastFrameIndex = -1 } } else { v(aZ, [Q], [Z, aV]); if (bd && a1 < bb) { E(aZ, aY.eventType, h); bi.lastFrameIndex = bb } } bi.edge = bg ? -1 : 1; switch (bi.edgeStrategy) { case "reset": I(aZ); continue; case "ease": ba = bj.frame; break; default: case "set": var a2 = bj.props; for (bk in a2) { if (aG.call(a2, bk)) { bc = b(a2[bk].value); if (bk.indexOf("@") === 0) { aZ.setAttribute(bk.substr(1), bc) } else { a.setStyle(aZ, bk, bc) } } } continue } } else { if (bi.edge !== 0) { v(aZ, [aj, aV], [Z, Q]); bi.edge = 0 } } var a6 = 0; for (; a6 < bb - 1; a6++) { if (ba >= a9[a6].frame && ba <= a9[a6 + 1].frame) { var a4 = a9[a6]; var bh = a9[a6 + 1]; for (bk in a4.props) { if (aG.call(a4.props, bk)) { var a5 = (ba - a4.frame) / (bh.frame - a4.frame); a5 = a4.props[bk].easing(a5); bc = aO(a4.props[bk].value, bh.props[bk].value, a5); bc = b(bc); if (bk.indexOf("@") === 0) { aZ.setAttribute(bk.substr(1), bc) } else { a.setStyle(aZ, bk, bc) } } } if (bd) { if (a1 !== a6) { if (h === "down") { E(aZ, a4.eventType, h) } else { E(aZ, bh.eventType, h) } bi.lastFrameIndex = a6 } } break } } } }; var ah = function () { if (aw) { aw = false; U() } var a0 = O.getScrollTop(); var aZ; var a2 = M(); var a1; if (aE) { if (a2 >= aE.endTime) { a0 = aE.targetTop; aZ = aE.done; aE = z } else { a1 = aE.easing((a2 - aE.startTime) / aE.duration); a0 = (aE.startTop + a1 * aE.topDiff) | 0 } O.setScrollTop(a0, true) } else { if (!aK) { var aY = aD.targetTop - a0; if (aY) { aD = { startTop: C, topDiff: a0 - C, targetTop: a0, startTime: aR, endTime: aR + r } } if (a2 <= aD.endTime) { a1 = K.sqrt((a2 - aD.startTime) / r); a0 = (aD.startTop + a1 * aD.topDiff) | 0 } } } if (aK || C !== a0) { h = (a0 > C) ? "down" : (a0 < C ? "up" : h); aK = false; var a4 = { curTop: a0, lastTop: C, maxTop: ay, direction: h }; var a3 = f.beforerender && f.beforerender.call(O, a4); if (a3 !== false) { ac(a0, O.getScrollTop()); if (J && S) { a.setStyle(S, "transform", "translate(0, " + -(aJ) + "px) " + ae) } C = a0; if (f.render) { f.render.call(O, a4) } } if (aZ) { aZ.call(O, false) } } aR = a2 }; var x = function (a0) { var aZ = 0; var a2 = a0.keyFrames.length; for (; aZ < a2; aZ++) { var a1 = a0.keyFrames[aZ]; var a4; var a6; var aY; var a5 = {}; var a3; while ((a3 = u.exec(a1.props)) !== null) { aY = a3[1]; a6 = a3[2]; a4 = aY.match(d); if (a4 !== null) { aY = a4[1]; a4 = a4[2] } else { a4 = g } a6 = a6.indexOf("!") ? V(a6) : [a6.slice(1)]; a5[aY] = { value: a6, easing: K[a4] } } a1.props = a5 } }; var V = function (aZ) { var aY = []; m.lastIndex = 0; aZ = aZ.replace(m, function (a0) { return a0.replace(av, function (a1) { return a1 / 255 * 100 + "%" }) }); if (ai) { aB.lastIndex = 0; aZ = aZ.replace(aB, function (a0) { return ai + a0 }) } aZ = aZ.replace(av, function (a0) { aY.push(+a0); return "{?}" }); aY.unshift(aZ); return aY }; var F = function (aZ) { var aY = {}; var a1; var a0; a1 = 0; a0 = aZ.keyFrames.length; for (; a1 < a0; a1++) { aM(aZ.keyFrames[a1], aY) } aY = {}; a1 = aZ.keyFrames.length - 1; for (; a1 >= 0; a1--) { aM(aZ.keyFrames[a1], aY) } }; var aM = function (a0, aY) { var aZ; for (aZ in aY) { if (!aG.call(a0.props, aZ)) { a0.props[aZ] = aY[aZ] } } for (aZ in a0.props) { aY[aZ] = a0.props[aZ] } }; var aO = function (a2, a1, a0) { var a3; var aY = a2.length; if (aY !== a1.length) { throw "Can't interpolate between \"" + a2[0] + '" and "' + a1[0] + '"' } var aZ = [a2[0]]; a3 = 1; for (; a3 < aY; a3++) { aZ[a3] = a2[a3] + ((a1[a3] - a2[a3]) * a0) } return aZ }; var b = function (aZ) { var aY = 1; N.lastIndex = 0; return aZ[0].replace(N, function () { return aZ[aY++] }) }; var I = function (a3, a0) { a3 = [].concat(a3); var aZ; var a2; var aY = 0; var a1 = a3.length; for (; aY < a1; aY++) { a2 = a3[aY]; aZ = T[a2[j]]; if (!aZ) { continue } if (a0) { a2.style.cssText = aZ.dirtyStyleAttr; v(a2, aZ.dirtyClassAttr) } else { aZ.dirtyStyleAttr = a2.style.cssText; aZ.dirtyClassAttr = ao(a2); a2.style.cssText = aZ.styleAttr; v(a2, aZ.classAttr) } } }; var aW = function () { ae = "translateZ(0)"; a.setStyle(S, "transform", ae); var a0 = az(S); var aZ = a0.getPropertyValue("transform"); var aY = a0.getPropertyValue(ai + "transform"); var a1 = (aZ && aZ !== "none") || (aY && aY !== "none"); if (!a1) { ae = "" } }; a.setStyle = function (aZ, a2, a0) { var aY = aZ.style; a2 = a2.replace(an, au).replace("-", ""); if (a2 === "zIndex") { if (isNaN(a0)) { aY[a2] = a0 } else { aY[a2] = "" + (a0 | 0) } } else { if (a2 === "float") { aY.styleFloat = aY.cssFloat = a0 } else { try { if (D) { aY[D + a2.slice(0, 1).toUpperCase() + a2.slice(1)] = a0 } aY[a2] = a0 } catch (a1) { } } } }; var aX = a.addEvent = function (a1, a3, a4) { var a2 = function (a5) { a5 = a5 || aS.event; if (!a5.target) { a5.target = a5.srcElement } if (!a5.preventDefault) { a5.preventDefault = function () { a5.returnValue = false; a5.defaultPrevented = true } } return a4.call(this, a5) }; a3 = a3.split(" "); var a0; var aZ = 0; var aY = a3.length; for (; aZ < aY; aZ++) { a0 = a3[aZ]; if (a1.addEventListener) { a1.addEventListener(a0, a4, false) } else { a1.attachEvent("on" + a0, a2) } aF.push({ element: a1, name: a0, listener: a4 }) } }; var q = a.removeEvent = function (a0, a1, a2) { a1 = a1.split(" "); var aZ = 0; var aY = a1.length; for (; aZ < aY; aZ++) { if (a0.removeEventListener) { a0.removeEventListener(a1[aZ], a2, false) } else { a0.detachEvent("on" + a1[aZ], a2) } } }; var c = function () { var a0; var aY = 0; var aZ = aF.length; for (; aY < aZ; aY++) { a0 = aF[aY]; q(a0.element, a0.name, a0.listener) } aF = [] }; var E = function (aZ, aY, a0) { if (f.keyframe) { f.keyframe.call(O, aZ, aY, a0) } }; var U = function () { var aY = O.getScrollTop(); ay = 0; if (aa && !J) { t.style.height = "" } L(); if (aa && !J) { t.style.height = (ay + y.clientHeight) + "px" } if (J) { O.setScrollTop(am.min(O.getScrollTop(), ay)) } else { O.setScrollTop(aY, true) } aK = true }; var aA = function () { var aY = y.clientHeight; var a1 = {}; var a0; var aZ; for (a0 in Y) { aZ = Y[a0]; if (typeof aZ === "function") { aZ = aZ.call(O) } else { if ((/p$/).test(aZ)) { aZ = (aZ.slice(0, -1) / 100) * aY } } a1[a0] = aZ } return a1 }; var R = function () { var aZ = 0; var aY; if (S) { aZ = am.max(S.offsetHeight, S.scrollHeight) } aY = am.max(aZ, t.scrollHeight, t.offsetHeight, y.scrollHeight, y.offsetHeight, y.clientHeight); return aY - y.clientHeight }; var ao = function (aY) { var aZ = "className"; if (aS.SVGElement && aY instanceof aS.SVGElement) { aY = aY[aZ]; aZ = "baseVal" } return aY[aZ] }; var v = function (a1, a6, a2) { var aY = "className"; if (aS.SVGElement && a1 instanceof aS.SVGElement) { a1 = a1[aY]; aY = "baseVal" } if (a2 === z) { a1[aY] = a6; return } var aZ = a1[aY]; var a5 = 0; var a0 = a2.length; for (; a5 < a0; a5++) { aZ = P(aZ).replace(P(a2[a5]), " ") } aZ = aT(aZ); var a4 = 0; var a3 = a6.length; for (; a4 < a3; a4++) { if (P(aZ).indexOf(P(a6[a4])) === -1) { aZ += " " + a6[a4] } } a1[aY] = aT(aZ) }; var aT = function (aY) { return aY.replace(p, "") }; var P = function (aY) { return " " + aY + " " }; var M = Date.now || function () { return +new Date() }; var aH = function (aZ, aY) { return aZ.frame - aY.frame }; var O; var T; var S; var f; var aa; var ay = 0; var ap = 1; var Y; var ar; var h = "down"; var C = -1; var aR = M(); var l = 0; var A = 0; var aw = false; var aE; var B; var r; var aD; var aK; var al = 0; var aL; var J = false; var aJ = 0; var ae; var aF = []; var aP; if (typeof define === "function" && define.amd) { define([], function () { return a }) } else { if (typeof module !== "undefined" && module.exports) { module.exports = a } else { aS.skrollr = a } } }(window, document));